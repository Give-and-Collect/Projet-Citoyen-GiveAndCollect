name: CI/CD Dev

on:
  push:
    branches:
      - main
      - dev
      -
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      DATABASE_TEST_URL: ${{ secrets.DATABASE_TEST_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          path: give-and-collect/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('give-and-collect/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install dependencies
        working-directory: give-and-collect
        run: npm install

      - name: Build project
        working-directory: give-and-collect
        run: |
          npm run build


  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    env:
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      DATABASE_TEST_URL: ${{ secrets.DATABASE_TEST_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: give-and-collect
        run: npm install

      - name: Run unit tests
        working-directory: give-and-collect
        run: npm run test


  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    env:
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      DATABASE_TEST_URL: ${{ secrets.DATABASE_TEST_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      CYPRESS_EMAIL: ${{ secrets.CYPRESS_EMAIL }}
      CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Verify project files
        run: |
          echo "Listing files in $(pwd):"
          ls -la

      - name: Install dependencies
        run: |
          cd give-and-collect
          npm install

      - name: Build project
        run: |
          cd give-and-collect
          npx prisma generate
          npx prisma migrate deploy
          npm run build

      - name: Start application for E2E tests
        run: |
          cd give-and-collect
          npm run start &
          npx wait-on http://localhost:3000

      - name: Run Cypress E2E tests
        run: |
          cd give-and-collect
          npm run cypress

      - name: Upload Cypress videos
        if: always()
        run: |
          if [ -d "give-and-collect/cypress/videos" ]; then
            echo "Uploading Cypress videos"
            uses: actions/upload-artifact@v3
            with:
              name: cypress-videos
              path: give-and-collect/cypress/videos
          else
            echo "No Cypress videos found to upload"
          fi

      - name: Upload Cypress screenshots
        if: failure()
        run: |
          if [ -d "give-and-collect/cypress/screenshots" ]; then
            echo "Uploading Cypress screenshots"
            uses: actions/upload-artifact@v3
            with:
              name: cypress-screenshots
              path: give-and-collect/cypress/screenshots
          else
            echo "No Cypress screenshots found to upload"
          fi
