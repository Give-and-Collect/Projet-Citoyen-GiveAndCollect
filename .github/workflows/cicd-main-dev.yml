name: CI/CD Dev

on:
  pull_request:
    branches:
      - main
      - dev
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      DATABASE_URL: ${{ secrets.DATABASE_TEST_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and start containers
        run: docker-compose -f docker-compose.yml up -d

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          path: give-and-collect/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('give-and-collect/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install dependencies
        working-directory: give-and-collect
        run: npm install

      - name: Generate Prisma Client
        working-directory: give-and-collect
        run: npx prisma generate

      - name: Deploy Prisma Migrations
        working-directory: give-and-collect
        run: npx prisma migrate deploy

      - name: Build project
        working-directory: give-and-collect
        run: npm run build

      - name: Run unit tests
        working-directory: give-and-collect
        run: npm run test

      - name: Stop and remove containers
        run: docker-compose -f docker-compose.yml down

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build
    env:
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      DATABASE_URL: ${{ secrets.DATABASE_TEST_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      CYPRESS_EMAIL: ${{ secrets.CYPRESS_EMAIL }}
      CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and start containers
        run: docker-compose -f docker-compose.yml up -d

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        with:
          path: give-and-collect/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('give-and-collect/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install dependencies
        working-directory: give-and-collect
        run: npm install

      - name: Generate Prisma Client
        working-directory: give-and-collect
        run: npx prisma generate

      - name: Deploy Prisma Migrations
        working-directory: give-and-collect
        run: npx prisma migrate deploy

      - name: Start application for E2E tests
        working-directory: give-and-collect
        run: npm run start &
        run: npx wait-on http://localhost:3000

      - name: Run Cypress E2E tests
        working-directory: give-and-collect
        run: npm run cypress

      - name: Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-videos
          path: give-and-collect/cypress/videos

      - name: Upload Cypress screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-screenshots
          path: give-and-collect/cypress/screenshots

      - name: Stop and remove containers
        run: docker-compose -f docker-compose.yml down
